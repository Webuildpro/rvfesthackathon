

<Servo.h>

#include <SoftwareSerial.h>
  
#include <LiquidCrystal_I2C.h>


LiquidCrystal_I2C lcd(0x27, 16, 2);
int pos=0;
  byte degree_symbol[8] = 
              {
                0b00111,
                0b00101,
                0b00111,
                0b00000,
                0b00000,
                0b00000,
                0b00000,
                0b00000
              };
#define RX 3
#define TX 2

String AP = "Himadri2g";       // AP NAME
String PASS = "Chyavan2003"; // AP PASSWORD
String API = "HZUVC7P4ORU6PXZL";   // Write API KEY
String HOST = "api.thingspeak.com";
String PORT = "80";
int countTrueCommand;
int countTimeCommand; 
boolean found = false; 
int valSensor = 1;
int Moist1= A0;  // Analog input pin that the potentiometer is attached to
int Moist2= A1;
  Servo myservo;
SoftwareSerial esp8266(RX,TX); 
  
void setup() {
 
Servo myservo;
  myservo.attach(7);
  Serial.begin(9600);
  
      pinMode(Moist1,INPUT);
      pinMode(Moist2,INPUT);

  esp8266.begin(115200);

  
  lcd.begin();


//  lcd.backlight();
 // lcd.clear();
  lcd.setCursor(2,0);
  lcd.print("Smart aquarium");
  lcd.setCursor(2,1);
  lcd.print("System");
  delay(5000);
  lcd.clear();
 
 
  sendCommand("AT",5,"OK");
  sendCommand("AT+CWMODE=1",5,"OK");
  sendCommand("AT+CWJAP=\""+ AP +"\",\""+ PASS +"\"",20,"OK");
  
}

void loop() {
    {
  
  

int  Moistr= analogRead(Moist1);
int   Moistl= analogRead(Moist2);
          
Serial.print("Mositure: ");
  Serial.print(Moistr);
   
    }
 String getData = "GET /update?api_key="+ API +"&field1="+getMoistrValue()+"&field2="+getMoistlValue();
 sendCommand("AT+CIPMUX=1",5,"OK");
 sendCommand("AT+CIPSTART=0,\"TCP\",\""+ HOST +"\","+ PORT,15,"OK");
 sendCommand("AT+CIPSEND=0," +String(getData.length()+4),4,">");
 esp8266.println(getData);delay(100);countTrueCommand++;
 sendCommand("AT+CIPCLOSE=0",5,"OK");

}

String getMoistrValue(){

int  Moistr=analogRead(Moist1);
 return String(Moistr); 

}



String getMoistlValue(){

 int Moistl=analogRead(Moist2);
//int temp=();
 return String(Moistl); 

}

void sendCommand(String command, int maxTime, char readReplay[]) {
  {
  
    
  int  Moistr=analogRead(Moist1);
   int  Moistl=analogRead(Moist2);

   
   
 
lcd.setCursor(0,0);
  lcd.print("Water quality"); 
  lcd.setCursor(0,1);
  lcd.print(Moistr);
delay(300);
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Gas");
  lcd.setCursor(0,1);
  int temp=Moistl;
  lcd.print(temp);
  
  delay(300);
  lcd.clear();
  
}
  Serial.print(countTrueCommand);
  Serial.print(". at command => ");
  Serial.print(command);
  Serial.print(" ");
  while(countTimeCommand < (maxTime*1))
  {
    esp8266.println(command);//at+cipsend
    if(esp8266.find(readReplay))//ok
    {
      found = true;
      break;
    }
  
    countTimeCommand++;
  }
  
  if(found == true)
  {
    Serial.println("OYI");
    countTrueCommand++;
    countTimeCommand = 0;
  }
  
  if(found == false)
  {
    Serial.println("Fail");
    countTrueCommand = 0;
    countTimeCommand = 0;
  }
  
  found = false;
 }
 
 
 
 #define BLYNK_TEMPLATE_ID "TMPL3Nc-t31oO"
#define BLYNK_TEMPLATE_NAME "fi fee"
#define BLYNK_AUTH_TOKEN "8egRecTRDdS2xaDzQE4bKVrijQCQBf2G"

#define BLYNK_PRINT Serial
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

#include<Servo.h>
Servo servo3;

char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "Himadri5g"; // Change your Wifi/ Hotspot Name
char pass[] = "Chyavan2003"; // Change your Wifi/ Hotspot Password

BLYNK_WRITE(V0)
{
  int s0 = param.asInt(); 
  servo3.write(s0);
  Blynk.virtualWrite(V5, s0);
}


void setup()
{
  Serial.begin(9600);

  servo3.attach(5);

  Blynk.begin(auth, ssid, pass);//Splash screen delay
  delay(2000); 
}

void loop() 
{
  Blynk.run();
  
}
